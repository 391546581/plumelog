{
  "filename": "README.md",
  "__html": "<h2 id=\"plumelog-trace-%E6%8F%90%E4%BE%9B%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97\">plumelog-trace 提供链路日志 <a class=\"header-anchor\" href=\"#plumelog-trace-%E6%8F%90%E4%BE%9B%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97\">#</a></h2>\n<h4 id=\"%E6%9C%AC%E6%A8%A1%E5%9D%97%E5%8E%9F%E7%90%86%E6%98%AF%E5%88%A9%E7%94%A8springaop%E5%88%87%E9%9D%A2%E4%BA%A7%E7%94%9F%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97%EF%BC%8C%E6%A0%B8%E5%BF%83%E6%98%AF%E9%85%8D%E7%BD%AEspringaop%2C%E9%85%8D%E7%BD%AE%E4%B9%8B%E5%89%8D%E4%B8%8D%E7%86%9F%E6%82%89springaop%E7%9A%84%E5%BB%BA%E8%AE%AE%E5%85%88%E7%86%9F%E6%82%89%E4%B8%8B\">本模块原理是利用springAOP切面产生链路日志，核心是配置springAOP,配置之前不熟悉springAOP的建议先熟悉下 <a class=\"header-anchor\" href=\"#%E6%9C%AC%E6%A8%A1%E5%9D%97%E5%8E%9F%E7%90%86%E6%98%AF%E5%88%A9%E7%94%A8springaop%E5%88%87%E9%9D%A2%E4%BA%A7%E7%94%9F%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97%EF%BC%8C%E6%A0%B8%E5%BF%83%E6%98%AF%E9%85%8D%E7%BD%AEspringaop%2C%E9%85%8D%E7%BD%AE%E4%B9%8B%E5%89%8D%E4%B8%8D%E7%86%9F%E6%82%89springaop%E7%9A%84%E5%BB%BA%E8%AE%AE%E5%85%88%E7%86%9F%E6%82%89%E4%B8%8B\">#</a></h4>\n<h4 id=\"%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%8C%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E6%A8%A1%E5%9D%97%E4%BC%9A%E4%BA%A7%E7%94%9F%E5%A4%A7%E9%87%8F%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97%EF%BC%8C%E5%B9%B6%E5%8F%91%E9%AB%98%E7%9A%84%E6%A8%A1%E5%9D%97%E4%B8%8D%E8%A6%81%E8%BF%87%E5%BA%A6%E4%BD%BF%E7%94%A8%EF%BC%8C%E7%89%B9%E5%88%AB%E6%98%AF%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9\">使用注意事项，链路追踪模块会产生大量链路日志，并发高的模块不要过度使用，特别是全局打点 <a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%8C%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E6%A8%A1%E5%9D%97%E4%BC%9A%E4%BA%A7%E7%94%9F%E5%A4%A7%E9%87%8F%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97%EF%BC%8C%E5%B9%B6%E5%8F%91%E9%AB%98%E7%9A%84%E6%A8%A1%E5%9D%97%E4%B8%8D%E8%A6%81%E8%BF%87%E5%BA%A6%E4%BD%BF%E7%94%A8%EF%BC%8C%E7%89%B9%E5%88%AB%E6%98%AF%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9\">#</a></h4>\n<h4 id=\"%E6%89%8B%E5%8A%A8%E6%89%93%E7%82%B9%E5%92%8C%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9%E4%B8%8D%E8%83%BD%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E7%94%A8%E4%BA%86%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9%EF%BC%8C%E6%89%8B%E5%8A%A8%E7%9A%84%E4%BC%9A%E5%A4%B1%E6%95%88\">手动打点和全局打点不能同时使用用了全局打点，手动的会失效 <a class=\"header-anchor\" href=\"#%E6%89%8B%E5%8A%A8%E6%89%93%E7%82%B9%E5%92%8C%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9%E4%B8%8D%E8%83%BD%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E7%94%A8%E4%BA%86%E5%85%A8%E5%B1%80%E6%89%93%E7%82%B9%EF%BC%8C%E6%89%8B%E5%8A%A8%E7%9A%84%E4%BC%9A%E5%A4%B1%E6%95%88\">#</a></h4>\n<h4 id=\"%E5%A6%82%E6%9E%9C%E9%85%8D%E7%BD%AE%E4%B8%8B%E6%9D%A5%E6%B2%A1%E6%9C%89%E9%93%BE%E8%B7%AF%E6%95%B0%E6%8D%AE%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89traceid%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%BD%A0%E7%9A%84aop%E7%94%9F%E6%95%88%E4%BA%86%E5%90%97%EF%BC%9F\">如果配置下来没有链路数据，第一检查是否有traceID，第二你的AOP生效了吗？ <a class=\"header-anchor\" href=\"#%E5%A6%82%E6%9E%9C%E9%85%8D%E7%BD%AE%E4%B8%8B%E6%9D%A5%E6%B2%A1%E6%9C%89%E9%93%BE%E8%B7%AF%E6%95%B0%E6%8D%AE%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89traceid%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%BD%A0%E7%9A%84aop%E7%94%9F%E6%95%88%E4%BA%86%E5%90%97%EF%BC%9F\">#</a></h4>\n<ol>\n<li>引入</li>\n</ol>\n<pre><code class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n               <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.plumelog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n               <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>plumelog-trace<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n               <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.5.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n           <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ol start=\"2\">\n<li>在项目中添加扫描路径，注意：如果原来你的项目没有扫描路径，不要只加这个，也要把你自己的项目的加了，不然只扫描plumelog的路径了</li>\n</ol>\n<ul>\n<li>注解形式</li>\n</ul>\n<pre><code>     @ComponentScan(&quot;com.plumelog&quot;)\n</code></pre>\n<ul>\n<li>xml配置形式</li>\n</ul>\n<pre><code class=\"language-xml\">     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">context:component-scan</span> <span class=\"hljs-attr\">base-package</span>=<span class=\"hljs-string\">\"com.plumelog\"</span>/&gt;</span>\n</code></pre>\n<ol start=\"3\">\n<li>需要自己的项目引入aop的 （这里默认scope 为 provided) 已经有的不要加了</li>\n</ol>\n<pre><code class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.11.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>provided<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n                <span class=\"hljs-comment\">&lt;!-- scope 为 provided 是为了不与使用者的版本冲突--&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ol start=\"4\">\n<li>手动打点 在需要记录的方法上加入 @Trace 就可以记录链路日志了</li>\n</ol>\n<pre><code class=\"language-java\">        <span class=\"hljs-meta\">@Trace</span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testLog</span><span class=\"hljs-params\">()</span> </span>{\n            easyLogDubboService.testLogDubbo();\n        }\n</code></pre>\n<ol start=\"5\">\n<li>全局打点 需要自己定义切入点 (demo 如下 )  当定义全局打点时，手动打点就会失效</li>\n</ol>\n<pre><code class=\"language-java\">    <span class=\"hljs-meta\">@Aspect</span>\n    <span class=\"hljs-meta\">@Component</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AspectConfig</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractAspect</span> </span>{\n    \n        <span class=\"hljs-meta\">@Around</span>(<span class=\"hljs-string\">\"within(com.xxxx..*))\"</span>)<span class=\"hljs-comment\">//这边写自己的包的路径</span>\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">around</span><span class=\"hljs-params\">(JoinPoint joinPoint)</span> </span>{\n            <span class=\"hljs-keyword\">return</span> aroundExecute(joinPoint);\n        }\n    }\n</code></pre>\n<ol start=\"6\">\n<li>如果不想再自己的控制台或者文件输出里看到trace日志可以通过添加过滤器过滤掉,logback的例子如下</li>\n</ol>\n<pre><code class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">appender</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"CONSOLE\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ch.qos.logback.core.ConsoleAppender\"</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--此过滤器过滤掉所有的trace日志，3.4.1版本logback自带的过滤类--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">filter</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"com.plumelog.logback.util.FilterSyncLogger\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">level</span>&gt;</span>info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">level</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">filterPackage</span>&gt;</span>com.plumelog.trace.aspect.AbstractAspect<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">filterPackage</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">filter</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">encoder</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pattern</span>&gt;</span>${CONSOLE_LOG_PATTERN}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Pattern</span>&gt;</span>\\\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">charset</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">charset</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">encoder</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">appender</span>&gt;</span>\n</code></pre>\n<p>3.4之前的版本可以复制以下代码创建一个过滤器再配置到logback里面去</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> ch.qos.logback.classic.spi.ILoggingEvent;\n<span class=\"hljs-keyword\">import</span> ch.qos.logback.core.filter.Filter;\n<span class=\"hljs-keyword\">import</span> ch.qos.logback.core.spi.FilterReply;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FilterSyncLogger</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Filter</span>&lt;<span class=\"hljs-title\">ILoggingEvent</span>&gt; </span>{\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> FilterReply <span class=\"hljs-title\">decide</span><span class=\"hljs-params\">(ILoggingEvent event)</span> </span>{\n\n        String filterPackage = <span class=\"hljs-string\">\"com.plumelog.trace.aspect.AbstractAspect\"</span>;\n\n        <span class=\"hljs-keyword\">if</span> (getPackName(event.getLoggerName()).equals(filterPackage)\n                || getPackName(event.getLoggerName()).equals(filterPackage)) {\n            <span class=\"hljs-keyword\">return</span> FilterReply.DENY;\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">return</span> FilterReply.ACCEPT;\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getPackName</span><span class=\"hljs-params\">(String className)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> className.substring(<span class=\"hljs-number\">0</span>, className.lastIndexOf(<span class=\"hljs-string\">\".\"</span>));\n    }\n\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/plumelog-trace/README.html",
  "meta": {}
}